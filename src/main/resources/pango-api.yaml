# Pango APIs
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.10"
  title: Pango API
  description: Move you App forwad with Pango API
  # The Domain of Service
host: dev.pango-apis.com #localhost:8090
#Array of sll schemes Pango API supports
schemes:
   - https
   - http
# Will be prefixed to all paths
basePath: /apis/v1
produces:
 - application/json
paths:
  /properties:
    get:
      summary: Rental Properties
      description: |
        The Properties endpoint returns information about *Pango* rental properties available around a given location. The response includes some details about the rental property and lists the the property in the proper display order by distance.
      parameters:
        - name: user-token
          in: header
          type: string
          description: user access token
          required: false
        - name: userReferenceId
          in: header
          type: string
          description: logged in user reference identifier
          required: false
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: radius
          in: query
          description: within distance from location, default is 25 Kilometers
          type: integer
          format: int32
        - name: propertyPurpose
          in: query
          type: string
          required: true
          default: Home
          description: The purpose of use for properties either Home or Business place
        - name: moveInDate
          in: query
          type: string
          required: true
          format: "YYYY-MM-dd"
          description: The expected moving in date
        - name: roomsCount
          in: query
          type: integer
          format: int32
          default: 1
          description: indicating properties should contain this rooms count, primariry for Business
        - name: bedRoomsCount
          in: query
          type: number
          format: double
          default: 0
          description: indicating properties should contain this number bedrooms count or 0.5 for studio property, primariry for Homes
        - name: minPrice
          in: query
          type: number
          format: double
          default: 0
          description: indicating minimun rental price per month
        - name: maxPrice
          in: query
          type: number
          format: double
          default: 0
          description: indicating maximum rental price per month
        - name: features
          in: query
          description: A comma separated string of featutes. Ex. Air Condition, Swimming Pool, Laundry
          required: false
          type: string
      tags:
      - Properties
      responses:
        200:
          description: An array of rental properties
          schema:
            type: array
            items:
              $ref: "#/definitions/PropertyResource"
        default:
          description: An error with a status code between  4XX and 5XX
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Create a new property
      description: This endpoint will create a new property. This property will be in an unverified status till the coordinator verifies it.
      tags:
      - Properties
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
           $ref: "#/definitions/PropertyDetailResource"
      responses:
       201:
        description: Ok, a new Property created
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /properties/list:
    get:
       summary: Get a list of active rental property unit rented or held by a Pango customer
       description: |
         The Property endpoint will return a list of active Pango rental property unit by status as specified in the query parameter
       tags:
       - Properties
       parameters:
       - name: user-token
         in: header
         type: string
         description: user access token
         required: true
       - name: userReferenceId
         in: header
         type: string
         description: logged in user reference identifier
         required: true
       - name: status
         in: query
         required: true
         type: string
         description: Status - "RENT" or "ON-HOLD"
       - name: landlordIndicator
         in: query
         required: true
         type: boolean
         description: Landlord indicator
       responses:
         200:
           description: List of Pango rental units assigned to the customer filtered as per the status
           schema:
            type: array
            items:
              $ref: "#/definitions/PropertyResource"
         default:
           description: An error with a status code between  4XX and 5XX
           schema:
            $ref: "#/definitions/Error"
  /properties/pending/list:
    get:
      summary: Rental Properties
      description: |
        The Properties endpoint returns information about *Pango* rental properties that have not been verified. The properties can be grouped by a coordinator or by the owner.
      tags:
      - Properties
      parameters:
        - name: user-token
          in: header
          type: string
          description: user access token
          required: true
        - name: userReferenceId
          in: header
          type: string
          description: logged in user reference identifier
          required: true
        - name: referenceId
          in: query
          type: string
          description: coordinator id or the owner Id
          required: true
        - name: landlordIndicator
          in: query
          type: boolean
          description: Landlord indicator to differentiate between owner and landlord
          required: true
      responses:
        200:
          description: An array of rental properties
          schema:
            type: array
            items:
              $ref: "#/definitions/PropertyResource"
        default:
          description: An error with a status code between  4XX and 5XX
          schema:
            $ref: "#/definitions/Error"
  /properties/{propertyReferenceId}:
     get:
       summary: A specific rental property
       description: |
         The Property endpoint returns detailed information of a specific Pango rental property
       parameters:
       - name: user-token
         in: header
         type: string
         description: user access token
         required: true
       - name: userReferenceId
         in: header
         type: string
         description: logged in user reference identifier
         required: true
       - name: propertyReferenceId
         in: path
         required: true
         type: string
         description: Unique identifier representing a specific Pango rental property
       tags:
       - Property
       responses:
         200:
           description: Detailed information of the property
           schema:
            $ref: "#/definitions/PropertyDetailResource"
         default:
          description: An error with a status code between  4XX and 5XX
          schema:
           $ref: "#/definitions/Error"
     put:
       summary: Update a specific rental property
       description: |
         The Property endpoint updates a specific Pango rental property
       parameters:
       - name: user-token
         in: header
         type: string
         description: user access token
         required: true
       - name: userReferenceId
         in: header
         type: string
         description: logged in user reference identifier
         required: true
       - name: propertyReferenceId
         in: path
         required: true
         type: string
         description: Unique identifier representing a specific Pango rental property
       - name: body
         in: body
         description: Updated property
         required: true
         schema:
          $ref: "#/definitions/PropertyDetailResource"
       tags:
       - Property
       responses:
         200:
           description: Ok, property updated successfully
         default:
          description: An error with a status code between  4XX and 5XX
          schema:
           $ref: "#/definitions/Error"
  /properties/{propertyReferenceId}/rent:
    put:
       summary: Updates a specific rental property unit with the rental details
       description: |
         The Property endpoint updates a specific Pango rental property unit with the rental details
       tags:
       - PropertyUnit
       - Renting PropertyUnit
       - User Transaction
       parameters:
       - name: user-token
         in: header
         type: string
         description: user access token
         required: true
       - name: userReferenceId
         in: header
         type: string
         description: logged in user reference identifier
         required: true
       - name: propertyReferenceId
         in: path
         required: true
         type: string
         description: Unique identifier representing a specific Pango rental property
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserRentResource"
       responses:
         200:
           description: Ok, the Pango rental unit has been updated successfully with the rental details
         default:
           description: An error with a status code between  4XX and 5XX
           schema:
            $ref: "#/definitions/Error"
  /properties/{propertyReferenceId}/hold:
    put:
       summary: Updates a specific rental property unit with the holding details
       description: |
         The Property endpoint updates a specific Pango rental property unit with the holding details. As part of this API the following orchestration will take place
         1. Calling the tegopesa payment APIs for making a holding payment
         2. Creating a transaction in customer transaction history and
         3. Creating a record in unit holding history
       tags:
       - PropertyUnit
       - Holding PropertyUnit
       - User Transaction
       parameters:
       - name: user-token
         in: header
         type: string
         description: user access token
         required: true
       - name: userReferenceId
         in: header
         type: string
         description: logged in user reference identifier
         required: true
       - name: propertyReferenceId
         in: path
         required: true
         type: string
         description: Unique identifier representing a specific Pango rental property
       responses:
         200:
           description: Ok, the Pango rental unit has been updated successfully with the holding details
         default:
           description: An error with a status code between  4XX and 5XX
           schema:
            $ref: "#/definitions/Error"
  /properties/{propertyReferenceId}/enquiries:
    post:
     summary: Creates a new Enquiry to the landlord about Pango based property
     description: |
        The Enquiries endpoint to create a new Enquiry about a Pango based property, that will subsequently notify the landlords about this new intent about their properties
     tags:
      - Enquiry
     consumes:
      - application/json
     parameters:
      - name: user-token
        in: header
        type: string
        description: user access token
        required: true
      - name: userReferenceId
        in: header
        type: string
        description: logged in user reference identifier
        required: true
      - name: propertyReferenceId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
         $ref: "#/definitions/EnquiryResource"
     responses:
       201:
         description: The request has been fulfilled and resulted in a new enquiry being created
       default:
        description: An error with a status code between  4XX and 5XX
        schema:
         $ref: "#/definitions/Error"
    get:
      tags:
       - Enquiry
      summary: Enquiries to this property.
      description: |
        This endpoint returns information about enquiries to this property by the current user(potential-tenant) default or All the enquiries made by many potential tenants to this property primariry for the landlord to access.
      parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: header
         type: string
         required: true
       - name: propertyReferenceId
         in: path
         type: string
         required: true
       - name: landlordIndicator
         in: query
         type: boolean
         default: false
         description: Relevance access indicator, whether it's being accessed by landloard or potential tenant
      responses:
        200:
         description: An array of Enquiries
         schema:
          type: array
          items:
            $ref: "#/definitions/EnquiryResource"
        default:
          description: An error with a status code between  4XX and 5XX
          schema:
            $ref: "#/definitions/Error"
  /properties/enquiries:
     get:
       tags:
        - Enquiry
       summary: Enquiries history
       description: |
          The endpoint returns information about  the Enquiries made by the user to different *Pango* properties when accessed by pontential tenants or Enquiries to *Pango* properties owned by the user when accessed by landlords. The response include some details about the rental property(grouped by) and enquiries to it,  in the proper display order of relevance.
       parameters:
        - name: user-token
          in: header
          type: string
          required: true
        - name: userReferenceId
          in: header
          type: string
          required: true
        - name: landlordIndicator
          in: query
          type: boolean
          default: false
          description: Relevance access indicator, whether it's being accessed by landlord or potential tenant
       responses:
         200:
           description: An an Array of Enquiries grouped by properties
           schema:
            type: array
            items:
             $ref: "#/definitions/EnquiryResource"
         default:
           description: An error with a status code between 4XX and 5XX
           schema:
             $ref: "#/definitions/Error"
  /properties/enquiries/{enquiryReferenceId}:
    put:
     summary: Updates an existing Enquiry  with correspondence from either the potential tenant or the landlord
     tags:
      - Enquiry
      - Correspondence
     consumes:
      - application/json
     parameters:
      - name: user-token
        in: header
        type: string
        required: true
      - name: userReferenceId
        in: header
        type: string
        required: true
      - name: enquiryReferenceId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
         $ref: "#/definitions/CorrespondenceResource"
     responses:
       200:
         description: Ok, Enquiry updated
       default:
         description: An error with a status code between  4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
    get:
     summary: Enquiry Details
     description: The endpoint returns detailed information about the Enquiry with it's associated correspondence
     tags:
      - Enquiry
      - Correspondence
     parameters:
      - name: user-token
        in: header
        required: true
        type: string
      - name: userReferenceId
        in: header
        type: string
        required: true
      - name: enquiryReferenceId
        in: path
        required: true
        type: string
     responses:
       200:
         description: detailed Enquiry with it's responses
         schema:
          $ref: "#/definitions/EnquiryResource"
       default:
         description: An error with a status code between  4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /users:
    post:
     tags:
       - Registration
       - User
     consumes:
       - application/json
     summary: Creates a new Pango user.
     description:  An endpoint for creating a new Pango user, an email with verification link will be sent to the registered email address
     parameters:
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserResource"
     responses:
       201:
        description: Ok, User registered, verification email sent
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /users/{userReferenceId}:
    put:
     tags:
       - User
     consumes:
       - application/json
     summary: Updates an existing user
     description:  An endpoint for updating an existing Pango User
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: path
         type: string
         required: true
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserResource"
     responses:
       200:
        description: Ok, User updated
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /users/{userReferenceId}/changepassword:
    put:
     tags:
       - User
     consumes:
       - application/json
     summary: Updates the password of an existing user
     description:  An endpoint for updating the password of an existing Pango User
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: path
         type: string
         required: true
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserProfileResource"
     responses:
       200:
        description: Ok, User password updated
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /users/{userReferenceId}/changeprofilepic:
    put:
     tags:
       - User
     consumes:
       - application/json
     summary: Updates the profile picture of an existing user
     description:  An endpoint for updating the profile picture of an existing Pango User
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: path
         type: string
         required: true
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserProfileResource"
     responses:
       200:
        description: Ok, User profile picture updated
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /users/{userReferenceId}/preferences:
    post:
     tags:
       - UserPreference
     consumes:
       - application/json
     summary: Creates a new preference for an existing Pango user
     description:  An endpoint for creating a new preference for an existing Pango user
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: path
         type: string
         required: true
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserPreferenceResource"
     responses:
       201:
         description: Ok, successfully created a new user preference
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
    get:
     tags:
       - UserPreference
     consumes:
       - application/json
     summary: gets all the preference for an existing Pango user
     description:  An endpoint for retrieving all the preferences for an existing Pango user
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: path
         type: string
         required: true
     responses:
       200:
         description: Ok, successfully retrieved all the preferences
         schema:
           type: array
           items:
             $ref: "#/definitions/UserPreferenceResource"
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /users/{userReferenceId}/preferences/{preferenceId}:
    put:
     tags:
       - UserPreference
     consumes:
       - application/json
     summary: Updates an existing preference for an existing Pango user
     description:  An endpoint for updating an existing preference for an existing Pango user
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: path
         type: string
         required: true
       - name: preferenceId
         in: path
         required: true
         type: string
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/UserPreferenceResource"
     responses:
       200:
         description: Ok, successfully updated the preference
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /authenticate:
    post:
     tags:
      - Login
     consumes:
      - application/json
     summary: Authenticate user by emailAddress and password
     description: |
        An endpoint for authenticate a pango user with supplied emailAddress and password, an expiring user token is returned along side the firstname, lastname as well the userReferenceId
     parameters:
      - name: body
        in: body
        required: true
        schema:
         $ref: "#/definitions/LoginResource"
     responses:
       200:
        description: user-token, userReferenceId, firstName and lastName
        schema:
         type: object
         properties:
          firstName:
           type: string
           description: logged in user's first name
          lastName:
           type: string
           description: logged in user's last name
          userReferenceId:
           type: string
           description: to be used in subsequent api calls
          user-token:
           type: string
           description: expiring encrypted access token, to be used in all API call for the loggged in user
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /authenticate/refresh:
    get:
     tags:
      - Login
      - Refresh Token
     consumes:
      - application/json
     summary: Refresh Authenticated user-token
     description: |
        An endpoint for refreshing  authenticated a pango user token before expiring , with supplied old user-token and , an a new expiring user token is returned along side the firstname, lastname as well the userReferenceId
     parameters:
      - name: user-token
        in: header
        type: string
        required: true
     responses:
       200:
        description: user-token, userReferenceId, firstName and lastName
        schema:
         type: object
         properties:
          firstName:
           type: string
           description: logged in user's first name
          lastName:
           type: string
           description: logged in user's last name
          userReferenceId:
           type: string
           description: to be used in subsequent api calls
          user-token:
           type: string
           description: expiring encrypted access token, to be used in all API call for the loggged in user
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /verify/confirmAccount:
    get:
      tags:
       - User
       - Registration
      consumes:
       - application/json
      summary:
        Verify the user
      description:
        An endpoint to verify the user's email address
      parameters:
        - name: confirm-token
          in: query
          type: string
          required: true
      responses:
        200:
         description: Ok, user verified.
        default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /rentals:
    get:
     tags:
      - Rentals
     consumes:
      - application/json
     summary: Returns the rental history for the owner or the customer as specified in the query parameter
     description: |
        An endpoint that returns the rental history of the owner or the customer as specified 'by' the propertyReferenceId
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: header
         type: string
         required: true
       - name: propertyReferenceId
         in: query
         required: false
         type: string
     responses:
       200:
        description: List of property units rental history
        schema:
         type: array
         items:
          $ref : "#/definitions/PropertyRentalHistoryResource"
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /holdings:
    get:
     tags:
      - Holdings
     consumes:
      - application/json
     summary: Returns the holding history for the owner or the customer as specified in the query parameter
     description: |
        An endpoint that returns the holding history of the owner or the customer as specified  in the 'landlordIndicator' query parameter
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: header
         type: string
         required: true
       - name: landlordIndicator
         in: query
         required: true
         default: false
         type: boolean
     responses:
       200:
        description: List of property units holding history
        schema:
         type: array
         items:
          $ref : "#/definitions/PropertyHoldingHistoryResource"
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /rentals/{rentalReferenceId}/reviews:
    post:
     tags:
      - Reviews
     consumes:
      - application/json
     summary: Creates a new review for the given Pango rental by an owner or a customer as specified in the query parameter
     description: |
        An endpoint that creates a new review for the given Pango rental by an owner or a customer as specified in the 'by' query parameter
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: header
         type: string
         required: true
       - name: by
         in: query
         required: true
         type: string
       - name: rentalReferenceId
         in: path
         required: true
         type: string
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/ReviewResource"
     responses:
       201:
        description: Ok, successfully created a new review
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /reviews/by/{referenceId}:
    get:
     tags:
      - Reviews
     consumes:
      - application/json
     summary: Returns the list of reviews
     description: |
        An endpoint that returns a list of reviews for a given property or for a customer as specified in the 'by' query parameter and the referenceId in the path parameter
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: header
         type: string
         required: true
       - name: by
         in: query
         required: true
         type: string
       - name: referenceId
         in: path
         required: true
         type: string
     responses:
       200:
        description: List of property units rental history
        schema:
         type: array
         items:
          $ref : "#/definitions/ReviewResource"
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /reviews/{reviewId}:
    put:
     tags:
      - Reviews
     consumes:
      - application/json
     summary: Updates a specific review as specified in the path parameter
     description: |
        An endpoint that updates a specific review as specified in the path parameter
     parameters:
       - name: user-token
         in: header
         required: true
         type: string
       - name: userReferenceId
         in: header
         type: string
         required: true
       - name: reviewId
         in: path
         type: string
         required: true
       - name: body
         in: body
         required: true
         schema:
          $ref: "#/definitions/ReviewResource"
     responses:
       200:
        description: Ok, the review was updated successfully
       default:
         description: An error with a status code between 4XX and 5XX
         schema:
           $ref: "#/definitions/Error"
  /attachments/{attachmentReferenceId}:
   post:
    tags:
     - Uploads
     - Attachments
    consumes:
     - multipart/form-data
    produces:
     - application/json
    summary: An end-point to handle any Pango relates uploads Ex. property-photos, profile-picture etc.
    description: |
      This end-point upload an attachment to the specified upload-category , attachment size should not exceed 1MB, supported types are [png,jpeg,jpg,pdf]. This API returns the attahment location
    parameters:
     - name: user-token
       in: header
       required: true
       type: string
     - name:  userReferenceId
       in: header
       type: string
       required: true
     - name: attachmentReferenceId
       description: Pango referenceId for one of `[Property, User, Inquiry]` to assocsite this attachment to
       in: path
       type: string
       required: true
     - name: attachmentCategory
       in: query
       type: string
       description: Accepted value is one of  `[PROPERTY, PROFILE_PICTURE, CORRESPONDENCE]`
       required: true
     - name: attachmentDescription
       in: query
       type: string
       required: true
       description: this denotes attachment description, like caption etc
     - name: isThumbnail
       in: query
       type: boolean
       description: indicates wheather the image should be used as a thumbnail, default is `false`
     - name: attachment
       description: The actual file to upload, size should not exceed `1MB`
       in: formData
       type: file
       required: true
    responses:
      200:
        description: Ok, Attachment uploaded successfuly
        schema:
         type: object
         properties:
           attachmnetUrl:
            type: string
      default:
        description: An error with a status code between `4XX` and `5XX`
        schema:
          $ref: "#/definitions/Error"
definitions:
  PropertyResource:
   type: object
   properties:
     propertyReferenceId:
      type: string
     propertyUnitId:
      type: string
      description: Unit number of the property
     propertyDescription:
      type: string
      description: summary description of the property
     listingFor:
       type: string
       description: Information representing whether the property is for rent or sale
       default: FOR RENT
     propertyRent:
       $ref: "#/definitions/PropertyRent"
     propertyFeature:
       $ref: "#/definitions/PropertyFeature"
     availability:
      type: string
      description: Value represeanting whether the property is available now or soon
     rating:
      type: integer
      format: int32
      description: Number representing everage stars rating out of `5` for this property
     reviewCount:
      type: integer
      format: int32
      description : Total number of tenant reviews on this property to date
     coverPhoto:
       $ref: "#/definitions/Attachment"
     distance:
      type: number
      format: double
      description: Total distnace in Kelometers from the location
     address:
      $ref: "#/definitions/Address"
     ownerReferenceId:
      type: string
      description: value representing the reference Id of the owner
  PropertyDetailResource:
   type: object
   properties:
     propertyReferenceId:
      type: string
     propertyUnitId:
      type: string
      description: Unit number of the property
     propertyDescription:
      type: string
      description: summary description of the property
     listingFor:
       type: string
       description: Information representing whether the property is for rent or sale
       default: FOR RENT
     propertyRent:
       $ref: "#/definitions/PropertyRent"
     propertyFeature:
       $ref: "#/definitions/PropertyFeature"
     availability:
      type: string
      description: Value represeanting whether the property is available now or soon
     availableOn:
      type: string
      format: YYYY-MM-DD
      description: Available on (future date) or available since (past date)
     autoListInd:
      type: boolean
      description: Indicates whether the property should be auto-listed once the current rental expires
     rating:
      type: integer
      format: int32
      description: Number representing everage stars rating out of 5 for this property
     reviewCount:
      type: integer
      format: int32
      description : Total number of tenant reviews on this property to date
     coverPhoto:
      $ref: "#/definitions/Attachment"
     photoUrl:
      type: array
      items:
        $ref: "#/definitions/Attachment"
      description: Images encoded in base64 representing the property
     location:
      type: array
      description: Longitide[0] and Latitude[1] location components of this property. For Example [-73.93383000695911, 40.81949109558767] implying a property is located at -73.93414657 longitude and 40.82302903 latitude.
      items:
        type: number
        format: double
        description: location component
     address:
      type: string
      description: Physical address of the
     ownerReferenceId:
      type: string
      description: value representing the reference Id of the owner
     terms:
      type: string
      description: Terms,  conditions and any restrictions information
     active:
      type: boolean
      description: Indicates whether the property is active or not
  EnquiryResource:
   type: object
   properties:
    enquiryReferenceId:
     type: string
    subject:
     type: string
     description: The subject of this Enquiry. For Example Interested, or Need More Information about this Unit etc
    introduction:
     type: string
     description: The quick introduction about the prospective tenant and their needs. For Example. I`m John Doe, married and blessed with two children teaching at Mawenzi Sec , searching for a home to accommodate my family
    message:
     type: string
     description: Detailed message to the landlord inticating the intentions and expected responses. For Example. I`m interested in this property and I would like you to schedule me up for site visit as soon as possible
    enquiredOn:
     type: string
     format: "YYYY-MM-ddThh:mm:ssTZD"
     description: The Enquiry date and time of the enquiry
    enquiredBy:
     type: string
     description: referenceId of the user who made the enquiry
    enquiredType:
     type: string
     description: Type of the enquiry - INTERESTED, REQUEST_INFO, SITE_VISIT, TAKEN or BOOK_PROPERTY
    propertyReferenceId:
     type: string
     description: referenceId of the property against which the enquiry is made
    correspondenceCount:
     type: integer
     format: int32
     description: Total messages count exchanged between the two parties to this Enquiry
    correspondence:
      type: array
      description: An array of correspondence, applicable to only to the get operation.
      items:
       $ref: "#/definitions/CorrespondenceResource"
  CorrespondenceResource:
   type: object
   properties:
    message:
     type: string
    attachment:
      $ref: "#/definitions/Attachment"
    correspondenceDate:
     type: string
     format: "YYYY-MM-DDThh:mm:ssTZD"
     description: The response date and time of the enquiry
    correspondenceType:
     type: string
     description: general category about this response. For Example . SITE_VISIT, TAKEN, REQUEST_INFO etc.
    owner:
     type: boolean
     description: indicator to identify an owner
  Attachment:
   type: object
   properties:
    fileType:
     type: string
    fileName:
     type: string
    fileSize:
     type: number
     format: double
     description: orginal content size in bytes
    contentBase64:
     type: string
     description: base64 encoded attachment content. for Pictures etc
    fileDescription:
     type: string
     description: A brief description of the image - user enters the description while uploading the pic
    profilePicture:
     type: boolean
     description: indicates whether the attachment is a profile pic or a cover photo
  Error:
   type: object
   properties:
     title:
       type: string
     status:
       type: integer
       format: int32
     detail:
       type: string
     timeStamp:
      type: number
     developerMessage:
      type: string
     errors:
      type: array
      description: an Array of errors messages occured
      items:
          type: string
          description: a specific error message

  UserResource:
   type: object
   properties:
    firstName:
     type: string
    lastName:
     type: string
    phoneNumber:
     type: string
    password:
     type: string
    emailAddress:
     type: string
    address:
     $ref: "#/definitions/Address"
  UserRentResource:
   type: object
   properties:
    startDate:
     type: string
    endDate:
     type: string
    phoneNumber:
     type: string
    emailAddress:
     type: string
    address:
     $ref: "#/definitions/Address"
  UserProfileResource:
   type: object
   properties:
    password:
     type: string
    newPassword:
     type: string
    confirmPassword:
     type: string
    profilePic:
     type: string
  UserPreferenceResource:
   type: object
   properties:
    preferenceId:
     type: string
    preferenceType:
     type: string
     description: reason for this preference. For Example. Notification
    fromDate:
     type: string
     format: YYYY-MM-dd
    toDate:
     type: string
     format: YYYY-MM-dd
    active:
     type: boolean
     description: status display or if set to false will diactivate preference
    sendNotification:
     type: boolean
    category:
     type: string
    userSearchHistory:
     $ref: "#/definitions/UserSearchHistory"
  Address:
   type: object
   properties:
    addressLine1:
     type: string
    addressLine2:
     type: string
    city:
     type: string
    state:
     type: string
     description: region for E.African countries. For Example Mwanza
    zip:
     type: string
     description: NA for E. Africa region
    country:
     type: string
  LoginResource:
   type: object
   properties:
    emailAddress:
     type: string
    password:
     type: string
  PropertyRentalHistoryResource:
   type: object
   properties:
    rentalReferenceId:
      type: string
    startDate:
      type: string
      format: YYYY-MM-DD
    endDate:
      type: string
      format: YYYY-MM-DD
    active:
      type: boolean
    propertyReferenceId:
      type: string
    user:
      type: string
  PropertyHoldingHistoryResource:
   type: object
   properties:
    holdingReferenceId:
      type: string
    startDate:
      type: string
      format: YYYY-MM-ddThh:mm:ssTZD
    endDate:
      type: string
      format: YYYY-MM-ddThh:mm:ssTZD
    timeRemaining:
      type: string
      format: hh:mm:ss
    propertyReferenceId:
      type: string
    user:
      type: string
  ReviewResource:
    type: object
    properties:
      reviewId:
        type: string
      reviewText:
        type: string
      reviewedBy:
        type: string
      reviewedDate:
        type: string
        format: YYYY-MM-DD
      recommend:
        type: boolean
      rating:
        type: string
      userReferenceId:
        type: string
      propertyReferenceId:
        type: string
  PropertyFeature:
    type: object
    properties:
      studio:
        type: boolean
        default: false
      nbrOfRooms:
        type: integer
      nbrOfBedRooms:
        type: integer
      nbrOfSelfContainedBedRooms:
        type: integer
      nbrOfBaths:
        type: integer
      nbrOfKitchens:
        type: integer
      propertySize:
        type: number
        format: double
      sizeUnit:
        type: string
        default: "sqft"
      additionalFeatures:
        type: array
        items:
          $ref: "#/definitions/Amenity"
  PropertyRent:
    type: object
    properties:
      amount:
        type: number
        format: double
      currency:
        type: string
      periodforAmount:
        $ref: "#/definitions/PerPeriod"
      rentalPeriod:
        type: string
  PerPeriod:
    type: object
    properties:
      value:
        type: string
        enum: ["MONTHLY", "YEARLY"]
  Amenity:
     type: object
     properties:
       amenityName:
         type: string
       amenityAvailable:
         type: boolean
  UserSearchHistory:
    type: object
    properties:
      date:
        type: string
        format: date-time
      query:
          $ref: "#/definitions/PropertySearchCriteria"
      resultCount:
        type: integer
        format: int32
  PropertySearchCriteria:
    type: object
    properties:
      searchDate:
        type: string
        format: date-time        
      longitude:
        type: number
        format: double
      latitude:
        type: number
        format: double
      radius:
        type: integer
        format: int32
      propertyPupose:
        type: string
      moveInDateAsString:
        type: string
      roomsCount:
        type: integer
        format: int32
      bedRoomsCount:
        type: number
        format: double
      bathCount:
        type: integer
        format: int32
      minPrice:
        type: integer
        format: int32
      maxPrice:
        type: integer
        format: int32
      amenities:
        type: string
